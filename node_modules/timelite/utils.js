"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DATETIME = [0, 0, 0];
exports.DATETIME_LEN = exports.DATETIME.length;
exports.TIME_SEPARATOR = ':';
exports.DATE_SEPARATOR = '-';
/**
 * Pad a single string time value with zeros. Eg. "5" to "05".
 *
 * @param string str
 * @param number len
 * @returns string
 */
function zeroPad(value, len) {
    if (value === void 0) { value = ''; }
    if (len === void 0) { len = 2; }
    var str = value.toString();
    if (str.length < len) {
        str = ('0' + str.toString()).slice(-len);
    }
    return str;
}
exports.zeroPad = zeroPad;
/**
 * Split and normalize a date or time string returning an unsigned integer array with their values.
 *
 * Examples:
 *  > "1:2" to [01, 02, 00]
 *  > "2018-12-25" to [2018, 12, 25]
 *
 * @param string str String date or time to split and normalize.
 * @param string divider String character or RegEx used to separate the string. E.g. ":" (Time) or "-" (Date)
 * @returns number[]
 */
function splitDateTime(str, divider) {
    var strTime = str.split(divider);
    var intTime = [];
    for (var i = 0; i < exports.DATETIME_LEN; i++) {
        intTime[i] = isNaN(parseInt(strTime[i], 10)) ? 0 : parseInt(strTime[i], 10);
    }
    return intTime;
}
exports.splitDateTime = splitDateTime;
/**
 * Format an array with time or date values into string time or date.
 *
 * @param array timeInts Integer array times to format. E.g. [12, 10, 45]
 * @param string joiner String character used to join the string. E.g. ":" (Time) or "-" (Date)
 * @returns string String time format.
 */
function formatDateTime(timeInts, joiner) {
    var intTime = Array.isArray(timeInts) ? timeInts : [timeInts];
    var intTimeLen = intTime.length;
    var strTime = [];
    var timeBase = exports.DATETIME.slice(0);
    for (var i = 0; i < intTimeLen; i++) {
        timeBase[i] = isNaN(intTime[i]) ? 0 : intTime[i];
    }
    var len;
    for (var i = 0; i < exports.DATETIME_LEN; i++) {
        len = joiner === exports.DATE_SEPARATOR && i === 0 ? 4 : 2;
        strTime[i] = zeroPad(timeBase[i].toString(), len);
    }
    return strTime.join(joiner);
}
exports.formatDateTime = formatDateTime;
/**
 * Get the number of days in a month of the given year and month.
 *
 * @param number year
 * @param number month
 * @returns number
 */
function getDaysInMonth(year, month) {
    var ndate = new Date(0);
    ndate.setFullYear(year, month, 0);
    ndate.setHours(0, 0, 0, 0);
    return ndate.getDate();
}
exports.getDaysInMonth = getDaysInMonth;
